{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component } from '@angular/core';\nlet FetchEmployeeComponent = class FetchEmployeeComponent {\n  constructor(http, baseUrl) {\n    http.get(baseUrl + 'weatherforecast').subscribe(result => {\n      this.forecasts = result;\n    }, error => console.error(error));\n  }\n};\nFetchEmployeeComponent = __decorate([Component({\n  selector: 'app-fetch-employee',\n  templateUrl: './fetch-employee.component.html'\n}), __param(1, Inject('BASE_URL'))], FetchEmployeeComponent);\nexport { FetchEmployeeComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAQ1C,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAGjCC,YAAYC,IAAgB,EAAsBC,OAAe;IAC/DD,IAAI,CAACE,GAAG,CAAoBD,OAAO,GAAG,iBAAiB,CAAC,CAACE,SAAS,CAACC,MAAM,IAAG;MAC1E,IAAI,CAACC,SAAS,GAAGD,MAAM;IACzB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;CA2BD;AAlCYR,sBAAsB,eAJlCD,SAAS,CAAC;EACTW,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE;CACd,CAAC,EAI+BC,iBAAM,CAAC,UAAU,CAAC,IAHtCZ,sBAAsB,CAkClC;SAlCYA,sBAAsB","names":["Component","FetchEmployeeComponent","constructor","http","baseUrl","get","subscribe","result","forecasts","error","console","selector","templateUrl","__param"],"sourceRoot":"","sources":["C:\\Users\\Salon\\source\\repos\\AngularWithDotNet\\AngularWithDotNet\\ClientApp\\src\\app\\fetch-employee\\fetch-employee.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Employee } from '../models/employee';\r\nimport { EmployeeService } from '../services/employee.service';\r\n\r\n@Component({\r\n  selector: 'app-fetch-employee',\r\n  templateUrl: './fetch-employee.component.html'\r\n})\r\nexport class FetchEmployeeComponent implements OnInit {\r\n  public employees: Employee[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  //constructor(private employeeService: EmployeeService) { }\r\n\r\n  //ngOnInit(): void {\r\n  //  this.getEmployees();\r\n  //}\r\n\r\n  //getEmployees(): void {\r\n  //  this.employeeService\r\n  //    .getEmployees()\r\n  //    .subscribe((empData => (this.employees = empData)));\r\n  //}\r\n\r\n  //delete(employeeID: number): void {\r\n  //  const ans = confirm(\r\n  //    'Do you want to delete the employee with Id:' + employeeID\r\n  //  );\r\n  //  if (ans) {\r\n  //    this.employeeService.deleteEmployee(employeeID).subscribe(\r\n  //      () => {\r\n  //        this.getEmployees();\r\n  //      },\r\n  //      (error) => console.error(error)\r\n  //    );\r\n  //  }\r\n  //}\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}