{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/employee.service\";\nimport * as i4 from \"@angular/common\";\nfunction AddEmployeeComponent_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtext(1, \" Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEmployeeComponent_span_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtext(1, \" Gender is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEmployeeComponent_span_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtext(1, \" Department is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEmployeeComponent_option_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const city_r5 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", city_r5.cityName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(city_r5.cityName);\n  }\n}\nfunction AddEmployeeComponent_span_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtext(1, \" City is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AddEmployeeComponent {\n  constructor(fb, avRoute, employeeService, router) {\n    this.fb = fb;\n    this.avRoute = avRoute;\n    this.employeeService = employeeService;\n    this.router = router;\n    if (this.avRoute.snapshot.params.id) {\n      this.employeeId = this.avRoute.snapshot.params.id;\n    }\n    this.employeeForm = this.fb.group({\n      employeeId: 0,\n      name: ['', [Validators.required]],\n      gender: ['', [Validators.required]],\n      department: ['', [Validators.required]],\n      city: ['', [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    this.fetchCityList();\n    if (this.employeeId > 0) {\n      this.title = 'Edit';\n      this.employeeService.getEmployeeById(this.employeeId).subscribe(response => {\n        this.employeeForm?.setValue(response);\n      }, error => console.error(error));\n    }\n  }\n  get registerFormControl() {\n    return this.employeeForm?.controls;\n  }\n  addEmployee() {\n    this.employeeService.saveEmployee(this.employeeForm.value).subscribe(() => {\n      this.router.navigate(['/fetch-employee']);\n    }, error => console.error(error));\n  }\n  updateEmployee() {\n    this.employeeService.updateEmployee(this.employeeForm.value).subscribe(() => {\n      this.router.navigate(['/fetch-employee']);\n    }, error => console.error(error));\n  }\n  save() {\n    this.submitted = true;\n    if (!this.employeeForm?.valid) {\n      return;\n    }\n    if (this.title === 'Create') {\n      this.addEmployee();\n    } else if (this.title === 'Edit') {\n      this.updateEmployee();\n    }\n  }\n  fetchCityList() {\n    this.employeeService.getCityList().subscribe(data => this.cityList = data);\n  }\n  cancel() {\n    this.router.navigate(['/fetch-employee']);\n  }\n}\nAddEmployeeComponent.ɵfac = function AddEmployeeComponent_Factory(t) {\n  return new (t || AddEmployeeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.EmployeeService), i0.ɵɵdirectiveInject(i2.Router));\n};\nAddEmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddEmployeeComponent,\n  selectors: [[\"app-add-employee\"]],\n  decls: 45,\n  vars: 7,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"row\"], [1, \"control-label\", \"col-md-12\"], [1, \"col-md-4\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"data-val\", \"true\", \"formControlName\", \"gender\", 1, \"form-control\"], [\"value\", \"\"], [\"value\", \"Male\"], [\"value\", \"Female\"], [\"type\", \"text\", \"formControlName\", \"department\", 1, \"form-control\"], [\"data-val\", \"true\", \"formControlName\", \"city\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-group\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"text-danger\"], [3, \"value\"]],\n  template: function AddEmployeeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"h3\");\n      i0.ɵɵtext(3, \"Employee\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"hr\");\n      i0.ɵɵelementStart(5, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AddEmployeeComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵelementStart(6, \"div\", 1)(7, \"label\", 2);\n      i0.ɵɵtext(8, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 3);\n      i0.ɵɵelement(10, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, AddEmployeeComponent_span_11_Template, 2, 0, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 1)(13, \"label\", 2);\n      i0.ɵɵtext(14, \"Gender\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 3)(16, \"select\", 6)(17, \"option\", 7);\n      i0.ɵɵtext(18, \"-- Select Gender --\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"option\", 8);\n      i0.ɵɵtext(20, \"Male\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"option\", 9);\n      i0.ɵɵtext(22, \"Female\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(23, AddEmployeeComponent_span_23_Template, 2, 0, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 1)(25, \"label\", 2);\n      i0.ɵɵtext(26, \"Department\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 3);\n      i0.ɵɵelement(28, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(29, AddEmployeeComponent_span_29_Template, 2, 0, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"div\", 1)(31, \"label\", 2);\n      i0.ɵɵtext(32, \"City\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"div\", 3)(34, \"select\", 11)(35, \"option\", 7);\n      i0.ɵɵtext(36, \"-- Select City --\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(37, AddEmployeeComponent_option_37_Template, 2, 2, \"option\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(38, AddEmployeeComponent_span_38_Template, 2, 0, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(39, \"hr\");\n      i0.ɵɵelementStart(40, \"div\", 13)(41, \"button\", 14);\n      i0.ɵɵtext(42, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function AddEmployeeComponent_Template_button_click_43_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(44, \"Cancel\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.title);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.employeeForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerFormControl.name.touched || ctx.submitted) && (ctx.registerFormControl.name.errors == null ? null : ctx.registerFormControl.name.errors.required));\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerFormControl.name.touched || ctx.submitted) && (ctx.registerFormControl.name.errors == null ? null : ctx.registerFormControl.name.errors.required));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerFormControl.name.touched || ctx.submitted) && (ctx.registerFormControl.name.errors == null ? null : ctx.registerFormControl.name.errors.required));\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.CityList);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerFormControl.name.touched || ctx.submitted) && (ctx.registerFormControl.name.errors == null ? null : ctx.registerFormControl.name.errors.required));\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","AddEmployeeComponent","constructor","fb","avRoute","employeeService","router","snapshot","params","id","employeeId","employeeForm","group","name","required","gender","department","city","ngOnInit","fetchCityList","title","getEmployeeById","subscribe","response","setValue","error","console","registerFormControl","controls","addEmployee","saveEmployee","value","navigate","updateEmployee","save","submitted","valid","getCityList","data","cityList","cancel","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Salon\\source\\repos\\AngularWithDotNet\\AngularWithDotNet\\ClientApp\\src\\app\\add-employee\\add-employee.component.ts","C:\\Users\\Salon\\source\\repos\\AngularWithDotNet\\AngularWithDotNet\\ClientApp\\src\\app\\add-employee\\add-employee.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { City } from '../models/city';\r\nimport { Employee } from '../models/employee';\r\nimport { EmployeeService } from '../services/employee.service';\r\n\r\n@Component({\r\n  selector: 'app-add-employee',\r\n  templateUrl: './add-employee.component.html',\r\n  styleUrls: ['./add-employee.component.css']\r\n})\r\nexport class AddEmployeeComponent implements OnInit {\r\n\r\n  employeeForm: FormGroup | undefined;\r\n  title: 'Create' | undefined;\r\n  employeeId: number | undefined;\r\n  errorMessage: any;\r\n  cityList: City[] | undefined;\r\n  submitted: false | undefined;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private avRoute: ActivatedRoute,\r\n    private employeeService: EmployeeService,\r\n    private router: Router\r\n  ) {\r\n    if (this.avRoute.snapshot.params.id) {\r\n      this.employeeId = this.avRoute.snapshot.params.id;\r\n    }\r\n\r\n    this.employeeForm = this.fb.group({\r\n      employeeId: 0,\r\n      name: ['', [Validators.required]],\r\n      gender: ['', [Validators.required]],\r\n      department: ['', [Validators.required]],\r\n      city: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchCityList();\r\n\r\n    if (this.employeeId > 0) {\r\n\r\n      this.title = 'Edit';\r\n      this.employeeService.getEmployeeById(this.employeeId).subscribe(\r\n        (response: Employee) => {\r\n          this.employeeForm?.setValue(response);\r\n        },\r\n        (error) => console.error(error)\r\n      );\r\n    }\r\n  }\r\n\r\n  get registerFormControl() {\r\n    return this.employeeForm?.controls;\r\n  }\r\n\r\n  private addEmployee(): void {\r\n    this.employeeService.saveEmployee(this.employeeForm.value).subscribe(\r\n      () => {\r\n        this.router.navigate(['/fetch-employee']);\r\n      },\r\n      (error) => console.error(error)\r\n    );\r\n  }\r\n\r\n  private updateEmployee(): void {\r\n    this.employeeService.updateEmployee(this.employeeForm.value).subscribe(\r\n      () => {\r\n        this.router.navigate(['/fetch-employee']);\r\n      },\r\n      (error) => console.error(error)\r\n    );\r\n  }\r\n\r\n  save(): void {\r\n    this.submitted = true;\r\n    if (!this.employeeForm?.valid) {\r\n      return;\r\n    }\r\n    if (this.title === 'Create') {\r\n      this.addEmployee();\r\n    } else if (this.title === 'Edit') {\r\n      this.updateEmployee();\r\n    }\r\n  }\r\n\r\n  private fetchCityList(): void {\r\n    this.employeeService\r\n      .getCityList()\r\n      .subscribe((data: City[]) => (this.cityList = data));\r\n  }\r\n\r\n  public cancel() {\r\n    this.router.navigate(['/fetch-employee']);\r\n  }\r\n\r\n}\r\n","<h1>{{ title }}</h1>\r\n<h3>Employee</h3>\r\n<hr />\r\n\r\n<form [formGroup]=\"employeeForm\" (ngSubmit)=\"save()\">\r\n  <div class=\"form-group row\">\r\n    <label class=\"control-label col-md-12\">Name</label>\r\n    <div class=\"col-md-4\">\r\n      <input class=\"form-control\" type=\"text\" formControlName=\"name\" />\r\n    </div>\r\n    <span class=\"text-danger\"\r\n          *ngIf=\"(registerFormControl.name.touched || submitted) &&\r\n          registerFormControl.name.errors?.required\">\r\n      Name is required\r\n    </span>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"control-label col-md-12\">Gender</label>\r\n    <div class=\"col-md-4\">\r\n      <select class=\"form-control\" data-val=\"true\" formControlName=\"gender\">\r\n        <option value=\"\">-- Select Gender --</option>\r\n        <option value=\"Male\">Male</option>\r\n        <option value=\"Female\">Female</option>\r\n      </select>\r\n    </div>\r\n    <span class=\"text-danger\"\r\n          *ngIf=\"(registerFormControl.name.touched || submitted) &&\r\n          registerFormControl.name.errors?.required\">\r\n      Gender is required\r\n    </span>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"control-label col-md-12\">Department</label>\r\n    <div class=\"col-md-4\">\r\n      <input class=\"form-control\" type=\"text\" formControlName=\"department\" />\r\n    </div>\r\n    <span class=\"text-danger\"\r\n          *ngIf=\"(registerFormControl.name.touched || submitted) &&\r\n          registerFormControl.name.errors?.required\">\r\n      Department is required\r\n    </span>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"control-label col-md-12\">City</label>\r\n    <div class=\"col-md-4\">\r\n      <select class=\"form-control\" data-val=\"true\" formControlName=\"city\">\r\n        <option value=\"\">-- Select City --</option>\r\n        <option *ngFor=\"let city of CityList\" value=\"{{ city.cityName }}\">{{ city.cityName }}</option>\r\n      </select>\r\n    </div>\r\n    <span class=\"text-danger\"\r\n          *ngIf=\"(registerFormControl.name.touched || submitted) &&\r\n          registerFormControl.name.errors?.required\">\r\n      City is required\r\n    </span>\r\n  </div>\r\n  <hr />\r\n  <div class=\"form-group\">\r\n    <button type=\"submit\" class=\"btn btn-primary\">Save</button>\r\n    <button class=\"btn btn-danger\" (click)=\"cancel()\">Cancel</button>\r\n  </div>\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}